export const ProtocolABI = [
  {
    type: "function",
    name: "closeAgreement",
    inputs: [{ name: "_agreementId", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "enterAgreement",
    inputs: [
      { name: "_offerId", type: "uint32", internalType: "uint32" },
      { name: "_initialDeposit", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveAgreementsValue",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getActorTvs",
    inputs: [{ name: "_actorAddr", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAgreement",
    inputs: [{ name: "id", type: "uint32", internalType: "uint32" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ForestCommon.Agreement",
        components: [
          { name: "id", type: "uint32", internalType: "uint32" },
          { name: "offerId", type: "uint32", internalType: "uint32" },
          { name: "userAddr", type: "address", internalType: "address" },
          { name: "balance", type: "uint256", internalType: "uint256" },
          { name: "startTs", type: "uint256", internalType: "uint256" },
          { name: "endTs", type: "uint256", internalType: "uint256" },
          {
            name: "provClaimedAmount",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "provClaimedTs", type: "uint256", internalType: "uint256" },
          {
            name: "status",
            type: "uint8",
            internalType: "enum ForestCommon.Status",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAgreementBalanace",
    inputs: [{ name: "_agreementId", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAgreementsCount",
    inputs: [],
    outputs: [{ name: "count", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllProviderIds",
    inputs: [],
    outputs: [{ name: "", type: "uint24[]", internalType: "uint24[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllValidatorIds",
    inputs: [],
    outputs: [{ name: "", type: "uint24[]", internalType: "uint24[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBalanceMinusOutstanding",
    inputs: [{ name: "_agreementId", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDetailsLink",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEmissionShares",
    inputs: [],
    outputs: [
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFees",
    inputs: [],
    outputs: [
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxActors",
    inputs: [],
    outputs: [
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMinCollateral",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOffer",
    inputs: [{ name: "id", type: "uint32", internalType: "uint32" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ForestCommon.Offer",
        components: [
          { name: "id", type: "uint32", internalType: "uint32" },
          {
            name: "status",
            type: "uint8",
            internalType: "enum ForestCommon.Status",
          },
          { name: "ownerAddr", type: "address", internalType: "address" },
          { name: "fee", type: "uint256", internalType: "uint256" },
          { name: "closeRequestTs", type: "uint256", internalType: "uint256" },
          { name: "stockAmount", type: "uint24", internalType: "uint24" },
          { name: "detailsLink", type: "string", internalType: "string" },
          { name: "activeAgreements", type: "uint32", internalType: "uint32" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOffersCount",
    inputs: [],
    outputs: [{ name: "count", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOutstandingReward",
    inputs: [{ name: "_agreementId", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOwnerAddr",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRegistryAddr",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTermUpdateDelay",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_registryAddr", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isActiveRegisteredAndAuthorizedRepresentative",
    inputs: [
      {
        name: "_actorType",
        type: "uint8",
        internalType: "enum ForestCommon.ActorType",
      },
      { name: "_ownerAddr", type: "address", internalType: "address" },
      { name: "_senderAddr", type: "address", internalType: "address" },
    ],
    outputs: [
      {
        name: "isRepresentativeOfActiveRegistered",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isActiveRegisteredOwner",
    inputs: [
      {
        name: "_actorType",
        type: "uint8",
        internalType: "enum ForestCommon.ActorType",
      },
      { name: "_ownerAddr", type: "address", internalType: "address" },
    ],
    outputs: [
      { name: "isOwnerOfActiveRegistered", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRegisteredActiveActor",
    inputs: [
      {
        name: "_actorType",
        type: "uint8",
        internalType: "enum ForestCommon.ActorType",
      },
      { name: "_addr", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "isRegistered", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauseOffer",
    inputs: [{ name: "_offerId", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerActor",
    inputs: [
      {
        name: "_actorType",
        type: "uint8",
        internalType: "enum ForestCommon.ActorType",
      },
      { name: "initialCollateral", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerOffer",
    inputs: [
      { name: "_providerOwnerAddr", type: "address", internalType: "address" },
      { name: "_fee", type: "uint256", internalType: "uint256" },
      { name: "_stockAmount", type: "uint24", internalType: "uint24" },
      { name: "_detailsLink", type: "string", internalType: "string" },
    ],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestOfferClose",
    inputs: [{ name: "_offerId", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDetailsLink",
    inputs: [{ name: "_detailsLink", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setEmissionShares",
    inputs: [
      { name: "_provShare", type: "uint256", internalType: "uint256" },
      { name: "_valShare", type: "uint256", internalType: "uint256" },
      { name: "_pcOwnerShare", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setFees",
    inputs: [
      { name: "_valRegFee", type: "uint256", internalType: "uint256" },
      { name: "_provRegFee", type: "uint256", internalType: "uint256" },
      { name: "_offerRegFee", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMaxActors",
    inputs: [
      { name: "_maxValsNum", type: "uint256", internalType: "uint256" },
      { name: "_maxProvsNum", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMinCollateral",
    inputs: [
      { name: "_minCollateral", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOwner",
    inputs: [{ name: "_ownerAddr", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTermUpdateDelay",
    inputs: [
      { name: "_termUpdateDelay", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "topUpExistingAgreement",
    inputs: [
      { name: "_agreementId", type: "uint32", internalType: "uint32" },
      { name: "_amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unpauseOffer",
    inputs: [{ name: "_offerId", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawReward",
    inputs: [{ name: "_agreementId", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawUserBalance",
    inputs: [
      { name: "_agreementId", type: "uint32", internalType: "uint32" },
      { name: "_amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ActorToPcRegistered",
    inputs: [
      {
        name: "actorType",
        type: "uint8",
        indexed: true,
        internalType: "enum ForestCommon.ActorType",
      },
      {
        name: "ownerAddr",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "initialCollateral",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AgreementClosed",
    inputs: [
      { name: "id", type: "uint32", indexed: true, internalType: "uint32" },
      {
        name: "closingAddr",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AgreementCreated",
    inputs: [
      { name: "id", type: "uint32", indexed: true, internalType: "uint32" },
      {
        name: "offerId",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "userAddr",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BalanceTopup",
    inputs: [
      {
        name: "agreementId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "addr",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BalanceWithdrawn",
    inputs: [
      {
        name: "agreementId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      { name: "addr", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OfferPaused",
    inputs: [
      { name: "id", type: "uint32", indexed: true, internalType: "uint32" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OfferRegistered",
    inputs: [
      { name: "id", type: "uint32", indexed: true, internalType: "uint32" },
      {
        name: "providerAddr",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "fee", type: "uint256", indexed: false, internalType: "uint256" },
      {
        name: "stockAmount",
        type: "uint24",
        indexed: false,
        internalType: "uint24",
      },
      {
        name: "detailsLink",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OfferUnpaused",
    inputs: [
      { name: "id", type: "uint32", indexed: true, internalType: "uint32" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardWithdrawn",
    inputs: [
      {
        name: "agreementId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      { name: "addr", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  { type: "error", name: "ActorAlreadyRegistered", inputs: [] },
  { type: "error", name: "ActorNotRegistered", inputs: [] },
  { type: "error", name: "ActorWrongType", inputs: [] },
  { type: "error", name: "InsufficientAmount", inputs: [] },
  { type: "error", name: "InvalidAddress", inputs: [] },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "InvalidParam", inputs: [] },
  { type: "error", name: "InvalidState", inputs: [] },
  { type: "error", name: "LimitExceeded", inputs: [] },
  { type: "error", name: "NotInitializing", inputs: [] },
  { type: "error", name: "ObjectActive", inputs: [] },
  { type: "error", name: "ObjectNotActive", inputs: [] },
  { type: "error", name: "OnlyOwnerAllowed", inputs: [] },
  { type: "error", name: "OnlyOwnerOrOperatorAllowed", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "Unauthorized", inputs: [] },
] as const;
